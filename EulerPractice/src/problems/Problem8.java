package problems;

import java.util.ArrayList;
import java.util.Collections;

public class Problem8 {

    //Find the thirteen adjacent digits in the 1000-digit number that
    // have the greatest product. What is the value of this product?
    //1000 digit number given in problem

    private static final String numberGiven = "731671765313306249192251196744265747423553491949349698352031277450632623957831801698480186947885184385861560789112949495459501737958331952853208805511125406987471585238630507156932909632952274430435576896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776" +
                                                "6572733300105336788122023542180975125454059475224352584907711670556013604839586446706324415722155397369781797784617406495514929086256932197846862248283972241375657056057490261407972968652414535100474" +
                                                "82166370484403199890008895243450658541227588666881164271714799244429282308634656748139191231628245861786645835912456652947654568284891288314260769004224219022671055626321111109370544217506941658960408" +
                                                "07198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450";

    private static ArrayList<Integer> store = new ArrayList<>();

    public static void main(String[]args) {
        for(int i = 0; i < numberGiven.length() - 13; i++) {
            store.add(calculateProd(numberGiven.substring(i, i + 13)));
        }
        Collections.sort(store);
        System.out.println(store.get(store.size() - 1));
    }

    private static int calculateProd(String num) {
        int prod = 1;
        for(int i = 0; i < num.length(); i++) {
            prod*= Integer.parseInt(num.charAt(i) + "");
        }
        return prod;
    }
}
